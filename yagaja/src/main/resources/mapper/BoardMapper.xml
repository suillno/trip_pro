<?xml version="1.0" encoding="UTF-8"?>

<!-- MyBatis에서 사용할 매퍼 설정: DTD(Document Type Definition) 명시 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML 파일이 연결될 Mapper 인터페이스 지정 -->
<mapper namespace="com.trip.webpage.mapper.BoardMapper">

<!--  1건 조회 쿼리  2025-05-22 조윤호   -->
<select id="selectOne" parameterType="Long" resultType="BoardDefaultVO">
SELECT bd.BOD_IDX
, bd.BOD_CONSTENT
, bd.BOD_TITLE
, bd.REG2_DATE
, bd.REG_ID
, count(lc.BOD_IDX) AS likeCnt
, B.cnt AS reportCnt
FROM BOARD_DEFAULT bd
LEFT OUTER JOIN LIKE_CNT lc ON bd.BOD_IDX = lc.BOD_IDX
LEFT OUTER JOIN (
SELECT COUNT(*) AS cnt, BOD_IDX FROM REPORT_CNT WHERE BOD_IDX = #{bodIdx}
GROUP BY BOD_IDX
) B ON B.BOD_IDX = bd.BOD_IDX
WHERE
bd.BOD_IDX = #{bodIdx}
GROUP BY bd.BOD_IDX, bd.BOD_CONSTENT, bd.BOD_TITLE , bd.REG2_DATE ,bd.REG_ID, B.cnt
</select>

<!--  목록 조회 쿼리  -->
<select id="selectList2" parameterType="SearchHelper" resultType="BoardDefaultVO">
SELECT * FROM BOARD_DEFAULT WHERE 1 = 1
<if test="cate != null and cate != ''"> AND cate = #{cate} </if>
<if test="bodIdx != null and bodIdx != ''"> AND BOD_IDX = #{bodIdx} </if>
<if test="userId != null and userId != ''"> AND USER_ID LIKE '%' || #{userId} || '%' </if>
<if test="bodTitle != null and bodTitle != ''"> AND BOD_TITLE LIKE '%' || #{bodTitle} || '%' </if>
ORDER BY REG2_DATE DESC
</select>

<select id="selectList" parameterType="SearchHelper" resultType="BoardDefaultVO">
  SELECT *
  FROM BOARD_DEFAULT
  WHERE 1 = 1
  AND IS_VISIBLE = 'N'
  <if test="cate != null and cate != ''">
    AND CATE = #{cate}
  </if>
  <if test="bodIdx != null and bodIdx != ''">
    AND BOD_IDX = #{bodIdx}
  </if>
  <if test="userId != null and userId != ''">
    AND USER_ID LIKE '%' || #{userId} || '%'
  </if>
  <if test="bodTitle != null and bodTitle != ''">
    AND BOD_TITLE LIKE '%' || #{bodTitle} || '%'
  </if>
  ORDER BY REG2_DATE DESC
  OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
</select>


<!--  목록 카운트 쿼리   2025-05-22 조윤호   -->
<select id="selectListCount" parameterType="SearchHelper" resultType="int">
SELECT COUNT(*) AS CNT FROM BOARD_DEFAULT
<where>
<if test="cate != null"> AND cate = #{cate} </if>
<if test="bodIdx != null"> AND BOD_IDX = #{bodIdx} </if>
<if test="userId != null and userId != ''"> AND USER_ID = #{userId} </if>
</where>
ORDER BY BOD_IDX DESC
</select>

<!-- 기본정보 들어가는 자료형 삭제함  2025-05-22 조윤호  -->
<!-- 2025-05-26 조윤호  이거 전부 복사 -->
<insert id="insertBoard" parameterType="BoardDefaultVO" useGeneratedKeys="true" keyProperty="bodIdx" keyColumn="BOD_IDX"> INSERT INTO BOARD_DEFAULT ( BOD_TITLE, BOD_CONSTENT, user_id, reg2_date, update_date, CATE, REG_ID, UPDATE_ID ) VALUES ( #{bodTitle}, #{bodConstent}, #{userId}, #{reg2Date}, #{updateDate}, #{cate}, #{regId}, #{regId} ) </insert>

<!-- 2025-05-22 조윤호  id선택해서 불러오는 디비설계 아마 삭제 될것같음 -->
<select id="selectLatestByUserId" resultType="BoardDefaultVO" parameterType="String"> 
	SELECT b.BOD_IDX, b.BOD_TITLE, b.REG2_DATE AS createdAt, m.USER_NAME FROM BOARD_DEFAULT b JOIN MEMBER m ON b.USER_ID = m.USER_ID WHERE b.USER_ID = #{userId} ORDER BY b.REG2_DATE DESC 
</select>

<update id="updateBoard" parameterType="BoardDefaultVO">
  UPDATE board_default
  <set>
    <if test="cate != null"> cate = #{cate}, </if>
    <if test="bodTitle != null"> bod_title = #{bodTitle}, </if>
    <if test="bodConstent != null"> bod_constent = #{bodConstent}, </if>
    <if test="updateId != null"> update_id = #{updateId}, </if>
    update_date = SYSDATE, 
    <if test="fileMstId != null"> file_mst_id = #{fileMstId}, </if>
    <if test="userId != null"> user_id = #{userId}, </if>
    <if test="isVisible != null"> is_visible = #{isVisible} </if>
  </set>
  WHERE bod_idx = #{bodIdx}
</update>

<!-- 게시글 삭제 -->
<delete id="deleteBoard" parameterType="long">
  DELETE FROM BOARD_DEFAULT
  WHERE BOD_IDX = #{bodIdx}
</delete>

<!-- 이미 좋아요 눌렀는지 확인 2025-05-27 조윤호 -->
<select id="hasUserLiked" resultType="boolean">
    SELECT CASE WHEN count(*) > 0 THEN 1 ELSE 0 END AS result 
    FROM LIKE_CNT
    WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
</select>

<!-- 좋아요 insert 쿼리: 중복된 경우 에러 발생함 (PK 걸려있음)  2025-05-27 조윤호-->
<insert id="insertLike" parameterType="map">
    INSERT INTO LIKE_CNT (BOD_IDX, USER_ID)
    VALUES (#{bodIdx}, #{userId})
</insert>

<!-- 2025-05-26 조윤호  글 조회 시 조회수 1 증가 -->
<update id="updateUserCnt" parameterType="long">
    UPDATE board_default 
    SET user_cnt = user_cnt + 1 
    WHERE BOD_IDX = #{bodIdx}
</update>

<!-- 댓글 저장 -->
<insert id="insertComment" parameterType="CommentVO">
        INSERT INTO comments (
           content, REG_ID, UPD_ID, USER_ID, BOD_IDX
        ) VALUES (
            #{content}, #{userId}, #{userId}, 
            #{userId}, #{bodIdx}
        )
</insert>

<!-- 댓글 업데이트 -->
<update id="updateComment" parameterType="CommentVO">
    UPDATE comments
    SET
        content = #{content},
        upd_id = #{userId},
        upd_date = SYSDATE
    WHERE
        COM_IDX = #{comIdx}
</update>

<!-- 댓글 삭제 -->
<delete id="deleteComment" parameterType="Long">
    DELETE FROM comments
    WHERE COM_IDX = #{comIdx}
</delete>


<!-- 댓글 리스트 -->
<select id="selectCommentList" parameterType="long" resultType="CommentVO">
        SELECT *
        FROM comments
        WHERE bod_idx = #{bodIdx}
          AND is_visible = 'N'
        ORDER BY REG_DATE DESC
</select>

<!--2025-05-28 조윤호-->
	 <!-- ❤️ 좋아요 추가 (LIKE_CNT 테이블에 삽입) -->
	<insert id="addLike">
	    INSERT INTO LIKE_CNT (BOD_IDX, USER_ID) VALUES (#{bodIdx}, #{userId})
	</insert>
	
	<!-- 💔 좋아요 취소 (LIKE_CNT 테이블에서 삭제) -->
	<delete id="removeLike">
	    DELETE FROM LIKE_CNT WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
	</delete>
	
	 <!-- 🔍 사용자가 해당 게시글에 좋아요를 눌렀는지 여부 확인 -->
	<select id="existsLike" resultType="boolean">
	    SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS isExist FROM LIKE_CNT WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
	</select>
	
	<!-- 📊 BOARD_DEFAULT 테이블의 LIKE_CNT 컬럼 업데이트 -->
	<update id="updateLikeCount" parameterType="map">
	    UPDATE BOARD_DEFAULT SET LIKE_CNT = LIKE_CNT + #{amount} WHERE BOD_IDX = #{bodIdx}
	</update>
	
	 <!-- 🔢 게시글의 누적 좋아요 수 가져오기 -->
	<select id="getLikeCount" resultType="int">
	    SELECT count(lc.BOD_IDX) AS likeCnt FROM BOARD_DEFAULT bd 
	LEFT OUTER JOIN LIKE_CNT lc ON bd.BOD_IDX = lc.BOD_IDX
	WHERE bd.BOD_IDX = #{bodIdx}
	GROUP BY bd.BOD_IDX, bd.BOD_CONSTENT, bd.BOD_TITLE , bd.REG2_DATE ,bd.REG_ID
	</select>

	<!-- 좋아요 많은 상위 5개 게시글 조회 -->
<select id="selectTop5LikedBoards" resultType="BoardDefaultVO">
    SELECT 
        bd.BOD_IDX,
        bd.BOD_TITLE,
        bd.BOD_CONSTENT,
        bd.REG2_DATE,
        bd.REG_ID,
        COUNT(lc.BOD_IDX) AS likeCnt
    FROM BOARD_DEFAULT bd
    LEFT JOIN LIKE_CNT lc ON bd.BOD_IDX = lc.BOD_IDX
    GROUP BY bd.BOD_IDX, bd.BOD_TITLE, bd.BOD_CONSTENT, bd.REG2_DATE, bd.REG_ID
    ORDER BY likeCnt DESC
    FETCH FIRST 5 ROWS ONLY
</select>

<!-- 신고 여부 확인  (완료 : 2025-05-29)-->
	<select id="checkReport" resultType="int">
	  SELECT COUNT(*) FROM REPORT_CNT WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
	</select>
	
	<!-- 신고 등록 -->
	<insert id="addReport">
	  INSERT INTO REPORT_CNT (BOD_IDX, USER_ID) 
	  VALUES (#{bodIdx}, #{userId})
	</insert>
	
	 <!-- 🔢 게시글의 누적 신고 수 가져오기 -->
	<select id="getReportCount" resultType="int">
	    SELECT count(lc.BOD_IDX) AS reportCnt FROM BOARD_DEFAULT bd 
	LEFT OUTER JOIN REPORT_CNT lc ON bd.BOD_IDX = lc.BOD_IDX
	WHERE bd.BOD_IDX = #{bodIdx}
	GROUP BY bd.BOD_IDX, bd.BOD_CONSTENT, bd.BOD_TITLE , bd.REG2_DATE ,bd.REG_ID
	</select>
	
	 <!-- 🔍 사용자가 해당 게시글에 신고를 눌렀는지 여부 확인 -->
	<select id="existsReport" resultType="boolean">
	    SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS isExist FROM REPORT_CNT WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
	</select>
	
	<!-- 💔 좋아요 취소 (REPORT_CNT 테이블에서 삭제) -->
	<delete id="removeReport">
	    DELETE FROM REPORT_CNT WHERE BOD_IDX = #{bodIdx} AND USER_ID = #{userId}
	</delete>

	<!-- 신고 3건 이상 게시글 조회 -->
<select id="selectReportedBoards" resultType="BoardDefaultVO">
    SELECT 
        bd.BOD_IDX,
        bd.BOD_TITLE,
        bd.BOD_CONSTENT,
        bd.REG2_DATE,
        bd.REG_ID,
        bd.IS_VISIBLE,
        COUNT(rc.BOD_IDX) AS reportCnt
    FROM BOARD_DEFAULT bd
    JOIN REPORT_CNT rc ON bd.BOD_IDX = rc.BOD_IDX
    GROUP BY bd.BOD_IDX, bd.BOD_TITLE, bd.BOD_CONSTENT, bd.REG2_DATE, bd.REG_ID, bd.IS_VISIBLE
    HAVING COUNT(rc.BOD_IDX) >= 1
    ORDER BY reportCnt DESC
</select>

<!-- 게시글 블라인드처리 -->
	<update id="blockBoard" parameterType="BoardDefaultVO">
		UPDATE BOARD_DEFAULT
		SET IS_VISIBLE = #{isVisible}
		WHERE BOD_IDX = #{bodIdx}
	</update>

</mapper>